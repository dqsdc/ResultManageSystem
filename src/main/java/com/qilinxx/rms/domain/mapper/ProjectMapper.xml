<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qilinxx.rms.domain.mapper.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.qilinxx.rms.domain.model.Project">
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="host" jdbcType="VARCHAR" property="host" />
    <result column="people" jdbcType="VARCHAR" property="people" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="genre" jdbcType="VARCHAR" property="genre" />
    <result column="start_time" jdbcType="BIGINT" property="startTime" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="project_source" jdbcType="VARCHAR" property="projectSource" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="set_time" jdbcType="BIGINT" property="setTime" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="mid" jdbcType="INTEGER" property="mid" />
    <result column="remake" jdbcType="VARCHAR" property="remake" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, host, people, name, topic, genre, start_time, end_time, project_source, money, 
    number, level, rank, type, set_time, profile, state, create_id, create_time, update_time, 
    mid, remake
  </sql>
</mapper>