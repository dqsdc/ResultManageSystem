<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qilinxx.rms.domain.mapper.NoticeMapper">
    <resultMap id="BaseResultMap" type="com.qilinxx.rms.domain.model.Notice">
        <result column="nid" jdbcType="VARCHAR" property="nid"/>
        <result column="check_id" jdbcType="VARCHAR" property="checkId"/>
        <result column="create_id" jdbcType="VARCHAR" property="createId"/>
        <result column="result_id" jdbcType="VARCHAR" property="resultId"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="message" jdbcType="VARCHAR" property="message"/>
        <result column="state" jdbcType="CHAR" property="state"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="remake" jdbcType="VARCHAR" property="remake"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    nid, check_id, create_id, result_id, type, message, state, create_time, remake
  </sql>
  <update id="passNoticeByNid">
    UPDATE notice SET state=1 WHERE result_id=#{result_id} AND type=#{type}
  </update>
  <select id="selectLastNotice" resultMap="BaseResultMap">
      SELECT * FROM notice where type=#{type} and result_id = #{result_id} AND state='0' ORDER BY create_time DESC limit 1
  </select>
  <select id="latestNotice" resultMap="BaseResultMap">
      SELECT * FROM notice where type=#{type} and create_id = #{create_id} AND state='0' ORDER BY create_time DESC limit 1
  </select>
    <select id="getAllNoticesOrderByTime" resultMap="BaseResultMap">
        SELECT * FROM notice where type=#{type} and create_id = #{create_id} ORDER BY create_time DESC
    </select>
</mapper>